# testGUI
import sys
from PyQt5.QtWidgets import QStyleFactory, QFrame, QSplitter, QDialogButtonBox, QSpinBox, QFormLayout, QLineEdit, QRadioButton, QCheckBox, QLabel, QComboBox, QMainWindow, QApplication, QWidget, QPushButton, QHBoxLayout, QGroupBox, QDialog, QVBoxLayout, QGridLayout, QTabWidget, QAction
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import pyqtSlot, Qt

class App(QMainWindow):
    def __init__(self):
        super().__init__()
        self.title = 'Dosenet GUI'
        self.left = 0
        self.top = 0
        self.width = 750
        self.height = 600
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)
 
       
        self.table_widget = MyTableWidget(self)
        self.setCentralWidget(self.table_widget)
        
        self.show()                

class MyTableWidget(QWidget):
        
    def __init__(self, parent):
        super(QWidget, self).__init__(parent)
        self.layout = QGridLayout(self)
               
        # Initialize tab screen
        self.tabs = QTabWidget()
        self.tab1 = QWidget()
        self.tab2 = QWidget()
        self.tabs.resize(700,600)
        
        # Add tabs
        self.tabs.addTab(self.tab1,"Configure")
        self.tabs.addTab(self.tab2,"Data!")
        
        # Create first tab
        self.tab1.layout = QGridLayout(self)
        
        # start button
        self.layout.addWidget(QPushButton('START'), 2,1,1,1)

        # stop button
        self.layout.addWidget(QPushButton('STOP'),2,2,1,1)

        # clear button
        self.layout.addWidget(QPushButton('CLEAR'),2,3,1,1)

        self.layout.addWidget(self.tabs, 1,1,1,3)        

        # column layout!!
        self.tab1.layout.setColumnStretch(0,1)
        self.tab1.layout.setColumnStretch(1,1.5)
        self.tab1.layout.setColumnStretch(2,1)
        self.tab1.layout.setColumnStretch(3,1.5)
        self.tab1.layout.setColumnStretch(4,2)
   
        # row layout!!  
        self.tab1.layout.setRowStretch(0,1)
        self.tab1.layout.setRowStretch(1,3)
        self.tab1.layout.setRowStretch(2,3)
        self.tab1.layout.setRowStretch(3,3)
        self.tab1.layout.setRowStretch(4,3)
        self.tab1.layout.setRowStretch(5,3)
        self.tab1.layout.setRowStretch(6,3)
        self.tab1.layout.setRowStretch(7,1)

        self.tab1.setLayout(self.tab1.layout)
        
        # integration time drop down
        combo = QComboBox(self)
        combo.addItem('1')
        combo.addItem('2')
        combo.addItem('5')
        combo.addItem('10')
        self.tab1.layout.addWidget(combo, 1,2)
        
        # integration time label
        label = QLabel("Integration Time (sec):",self)
        self.tab1.layout.addWidget(label,1,1)        

        # select sensor label
        sensorLabel = QLabel("Select Sensors", self)
        self.tab1.layout.addWidget(sensorLabel, 1,4)

        # radiation sensor
        RADsensor = QCheckBox('Radiation', self)
        self.tab1.layout.addWidget(RADsensor, 2,4)

        # air quality sensor
        AQsensor = QCheckBox('Air Quality', self)
        self.tab1.layout.addWidget(AQsensor, 3,4)
 
        # carbon dioxide sensor
        CO2sensor = QCheckBox('CO2', self)
        self.tab1.layout.addWidget(CO2sensor, 4,4)
                
        # data points label
        datapointsLabel = QLabel("Data Points to Display:", self)
        self.tab1.layout.addWidget(datapointsLabel, 2,1)

        # data points drop down
        selectDatapoints = QComboBox(self)
        selectDatapoints.addItem('10')
        selectDatapoints.addItem('25')
        selectDatapoints.addItem('50')
        self.tab1.layout.addWidget(selectDatapoints, 2,2)

        # save data checkbox
        saveData = QCheckBox('Save Data', self)
        self.tab1.layout.addWidget(saveData, 3,1)
        saveData.stateChanged.connect(self.showSaveData)
       
        # radio button group Inside / Outside
        self.location1 = QRadioButton('Inside', self)
        self.tab1.layout.addWidget(self.location1, 4,1)
        self.location1.hide()

        self.location2 = QRadioButton('Outside', self)
        self.tab1.layout.addWidget(self.location2, 4,2)
        self.location2.hide()

        # name data label
        self.dataName = QLabel("Name:", self)
        self.tab1.layout.addWidget(self.dataName, 5,1)
        self.dataName.hide()

        # name data textbox
        self.dataTextbox = QLineEdit(self)
        self.tab1.layout.addWidget(self.dataTextbox, 5,2)
        self.dataTextbox.hide()

        # Add tabs to widget
        #self.layout.addWidget(self.tabs)
        #self.setLayout(self.layout)

    def showSaveData(self, state):
        if state == Qt.Checked:
            self.location1.show()
            self.location2.show()
            self.dataName.show() 
            self.dataTextbox.show()
        elif state == Qt.Unchecked: #hides widgets
            self.location1.hide()
            self.location2.hide()
            self.dataName.hide()
            self.dataTextbox.hide()
   
    @pyqtSlot()
    def on_click(self):
        print("\n")
        for currentQTableWidgetItem in self.tableWidget.selectedItems():
            print(currentQTableWidgetItem.row(), currentQTableWidgetItem.column(), currentQTableWidgetItem.text())

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    sys.exit(app.exec_())
